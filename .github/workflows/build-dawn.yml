name: build-dawn

on: workflow_dispatch

jobs:
  info:
    runs-on: ubuntu-24.04
    outputs:
      DAWN_COMMIT: ${{ steps.info.outputs.DAWN_COMMIT }}
      BUILD_DATE: ${{ steps.info.outputs.BUILD_DATE }}
    steps:
      - name: Get Latest Commit Id
        id: info
        run: |
          echo DAWN_COMMIT=`git ls-remote https://dawn.googlesource.com/dawn HEAD | awk '{ print $1 }'` >> ${GITHUB_OUTPUT}
          echo BUILD_DATE=`date +'%Y-%m-%d'` >> ${GITHUB_OUTPUT}

  build:
    runs-on: ${{ matrix.build.os }}
    needs: info
    strategy:
      matrix:
        build:
          - { os: windows-2022, arch: x64 }
          - { os: windows-2022, arch: arm64 }
          - { os: ubuntu-24.04, arch: x86_64 }
          - { os: ubuntu-24.04, arch: arm64 }
          - { os: macos-12, arch: x86_64 }
          - { os: macos-14, arch: arm64 }
    env:
      DAWN_COMMIT: ${{ needs.info.outputs.DAWN_COMMIT }}
      BUILD_DATE: ${{ needs.info.outputs.BUILD_DATE }}
      OS: ${{ matrix.build.os }}
      ARCH: ${{ matrix.build.arch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies (Linux)
        if: matrix.build.os == 'ubuntu-24.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake zip libxrandr-dev libxinerama-dev libxcursor-dev mesa-common-dev libx11-xcb-dev pkg-config

      - name: Install Windows SDK
        if: matrix.build.os == 'windows-2022'
        shell: cmd
        run: |
          "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe" modify --installPath "C:\Program Files\Microsoft Visual Studio\2022\Enterprise" --quiet --force --norestart --add Microsoft.VisualStudio.Component.Windows11SDK.26100

      - name: Run Build Script
        id: build
        shell: bash
        run: |
          if [ "${{ matrix.build.os }}" == "windows-2022" ]; then
            cmd /c build.cmd ${{ matrix.build.arch }}
          else
            ./build.sh ${{ matrix.build.arch }}
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dawn-${{ matrix.build.os }}-${{ matrix.build.arch }}-${{ needs.info.outputs.BUILD_DATE }}
          path: dawn-${{ matrix.build.os }}-${{ matrix.build.arch }}-${{ needs.info.outputs.BUILD_DATE }}.zip
          if-no-files-found: error
          compression-level: 0

  release:
    runs-on: ubuntu-24.04
    needs: [info, build]
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Create GitHub Release
        run: |
          echo '[dawn commit](https://dawn.googlesource.com/dawn/+/${{ needs.info.outputs.DAWN_COMMIT }})' >>notes.txt
          gh release create ${{ needs.info.outputs.BUILD_DATE }} -R "${GITHUB_REPOSITORY}" -t '${{ needs.info.outputs.BUILD_DATE }}' -F notes.txt

      - name: Get Artifacts From Build Steps
        uses: actions/download-artifact@v4
        with:
          pattern: dawn-*-${{ needs.info.outputs.BUILD_DATE }}
          merge-multiple: true

      - name: Upload Artifacts to GitHub Release
        run: gh release upload '${{ needs.info.outputs.BUILD_DATE }}' dawn-*-${{ needs.info.outputs.BUILD_DATE }}.zip -R "${GITHUB_REPOSITORY}"